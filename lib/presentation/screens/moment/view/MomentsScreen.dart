import 'package:flutter/material.dart';

class MomentsScreen extends StatefulWidget {
  @override
  _MomentsScreenState createState() => _MomentsScreenState();
}

class _MomentsScreenState extends State<MomentsScreen> with SingleTickerProviderStateMixin {
  late TabController _tabController;
  int _currentIndex = 0; // cho bottom nav bar

    @override
    void initState() {
      super.initState();
      _tabController = TabController(length: 2, vsync: this);
    }

    @override
    void dispose() {
      _tabController.dispose();
      super.dispose();
    }
  // D·ªØ li·ªáu gi·∫£ ƒë·ªÉ hi·ªÉn th·ªã danh s√°ch c√°c b√†i vi·∫øt (moment) v·ªõi nhi·ªÅu ·∫£nh
  final List<Map<String, dynamic>> _moments = [
      {
        'username': 'Mai',
        'images': [
          'assets/images/Content/7.jpg',
          'assets/images/Content/1.jpg',
        ],
        'profileImage': 'assets/images/Ava/7.jpg',
        'content': 'Chill c√πng b·∫°n b√® cu·ªëi tu·∫ßn!',
        'likes': 15,
        'comments': 5,
        'liked': false,
      },
      {
        'username': 'Lan',
        'images': [
          'assets/images/Content/4.jpg',
          'assets/images/Content/5.jpg',
          'assets/images/Content/6.jpg',
        ],
        'profileImage': 'assets/images/Ava/8.jpg',
        'content': 'ƒêi ch∆°i bi·ªÉn ƒë√¢y! üåä',
        'likes': 23,
        'comments': 7,
        'liked': true,
      },
      {
        'username': 'H∆∞∆°ng',
        'images': [
          'assets/images/Content/8.jpg',
        ],
        'profileImage': 'assets/images/Ava/9.jpg',
        'content': 'M·ªôt ng√†y l√†m vi·ªác hi·ªáu qu·∫£',
        'likes': 8,
        'comments': 1,
        'liked': false,
      },
      {
        'username': 'Th·∫£o',
        'images': [
          'assets/images/Content/4.jpg',
          'assets/images/Content/5.jpg',
        ],
        'profileImage': 'assets/images/Ava/10.jpg',
        'content': 'ƒÇn t·ªëi ngon qu√°!',
        'likes': 12,
        'comments': 4,
        'liked': false,
      },
      {
        'username': 'Nam',
        'images': [
          'assets/images/Content/3.jpg',
          'assets/images/Content/5.jpg',
          'assets/images/Content/8.jpg',

        ],
        'profileImage': 'assets/images/Ava/1.jpg',
        'content': 'ƒê√° b√≥ng c√πng anh em',
        'likes': 18,
        'comments': 6,
        'liked': true,
      },
      {
        'username': 'Tu·∫•n',
        'images': [
          'assets/images/Content/1.jpg',
        ],
        'profileImage': 'assets/images/Ava/2.jpg',
        'content': 'L√†m vi·ªác t·∫°i qu√°n c√† ph√™',
        'likes': 5,
        'comments': 0,
        'liked': false,
      },
      {
        'username': 'H√πng',
        'images': [
          'assets/images/Content/10.jpg',
          'assets/images/Content/9.jpg',
        ],
        'profileImage': 'assets/images/Ava/3.jpg',
        'content': 'Du l·ªãch ƒê√† L·∫°t',
        'likes': 25,
        'comments': 9,
        'liked': false,
      },
      {
        'username': 'ƒê·ª©c',
        'images': [
          'assets/images/Content/3.jpg',
          'assets/images/Content/7.jpg',
          'assets/images/Content/8.jpg',
        ],
        'profileImage': 'assets/images/Ava/4.jpg',
        'content': 'Ch·ª•p ·∫£nh c√πng team',
        'likes': 14,
        'comments': 3,
        'liked': true,
      },
      {
        'username': 'Quang',
        'images': [
          'assets/images/Content/10.jpg',
        ],
        'profileImage': 'assets/images/Ava/5.jpg',
        'content': 'Ng√†y m·ªõi t·ªët l√†nh',
        'likes': 7,
        'comments': 2,
        'liked': false,
      },
      {
        'username': 'Long',
        'images': [
          'assets/images/Content/4.jpg',
          'assets/images/Content/8.jpg',
        ],
        'profileImage': 'assets/images/Ava/6.jpg',
        'content': 'Ch·∫°y b·ªô bu·ªïi s√°ng',
        'likes': 9,
        'comments': 1,
        'liked': false,
      }
    // Th√™m c√°c b√†i vi·∫øt gi·∫£ v√†o ƒë√¢y
  ];

  // H√†m thay ƒë·ªïi tr·∫°ng th√°i like
  void _toggleLike(int index) {
    setState(() {
      _moments[index]['liked'] = !_moments[index]['liked'];
      _moments[index]['likes'] += _moments[index]['liked'] ? 1 : -1;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: TabBar(
          controller: _tabController,
          labelColor: Colors.black,
          unselectedLabelColor: Colors.grey,
          indicatorColor: Colors.blueAccent,
          tabs: [
            Tab(text: 'D√†nh cho b·∫°n'),
            Tab(text: 'ƒêang theo d√µi'),
          ],
        ),
        backgroundColor: Colors.white,
        elevation: 0,
        centerTitle: true,
      ),
       body: TabBarView(
      controller: _tabController,
      children: [
        Center(
            child: ListView.builder(
              itemCount: _moments.length,
              itemBuilder: (context, index) {
                var moment = _moments[index];
                return Card(
                  margin: EdgeInsets.all(10),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(15), // Bo g√≥c c·ªßa card
                  ),
                  elevation: 5, // Th√™m b√≥ng ƒë·ªï cho card
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // Row ch·ª©a ·∫£nh ƒë·∫°i di·ªán v√† t√™n ng∆∞·ªùi ƒëƒÉng
                        Row(
                          children: [
                            CircleAvatar(
                              radius: 18,  // K√≠ch th∆∞·ªõc ·∫£nh ƒë·∫°i di·ªán nh·ªè h∆°n
                              backgroundImage: AssetImage(moment['profileImage']),
                            ),
                            SizedBox(width: 10),
                            Text(
                              moment['username'],
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                fontSize: 16,
                                color: Colors.teal, // M√†u t√™n
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 10),
                        // N·ªôi dung b√†i ƒëƒÉng
                        Text(
                          moment['content'],
                          style: TextStyle(fontSize: 16),
                        ),
                        SizedBox(height: 10),
                        // Hi·ªÉn th·ªã nhi·ªÅu ·∫£nh trong b√†i ƒëƒÉng
                        moment['images'] != null && moment['images'].isNotEmpty
                            ? Container(
                          height: 200, // Chi·ªÅu cao c·ªßa container ch·ª©a ·∫£nh
                          child: ListView.builder(
                            scrollDirection: Axis.horizontal, // Di chuy·ªÉn theo chi·ªÅu ngang
                            itemCount: moment['images'].length,
                            itemBuilder: (context, imageIndex) {
                              return Padding(
                                padding: const EdgeInsets.only(right: 10.0),
                                child: ClipRRect(
                                  borderRadius: BorderRadius.circular(10),
                                  child: Image.asset(
                                    moment['images'][imageIndex],
                                    width: 150, // Chi·ªÅu r·ªông ·∫£nh
                                    height: 200, // Chi·ªÅu cao ·∫£nh
                                    fit: BoxFit.contain, // ƒê·∫£m b·∫£o h√¨nh ·∫£nh hi·ªÉn th·ªã to√†n b·ªô m√† kh√¥ng b·ªã c·∫Øt
                                  ),
                                ),
                              );
                            },
                          ),
                        )
                            : Container(),
                        SizedBox(height: 10),
                        // T∆∞∆°ng t√°c (Like v√† Comment)
                        Row(
                          children: [
                            IconButton(
                              icon: Icon(
                                moment['liked'] ? Icons.thumb_up : Icons.thumb_up_alt,
                                color: moment['liked'] ? Colors.blue : Colors.grey,
                              ),
                              onPressed: () => _toggleLike(index),
                            ),
                            Text('${moment['likes']} Likes'),
                            Spacer(),
                            IconButton(
                              icon: Icon(Icons.comment, color: Colors.grey),
                              onPressed: () {
                                // M·ªü ph·∫ßn b√¨nh lu·∫≠n khi ng∆∞·ªùi d√πng nh·∫•n v√†o bi·ªÉu t∆∞·ª£ng comment
                                _showCommentsDialog(context, index);
                              },
                            ),
                            Text('${moment['comments']} Comments'),
                          ],
                        ),
                      ],
                    ),
                  ),
                );
              },
            ),
        ),
        Center(child: Text('N·ªôi dung ƒëang theo d√µi')),
      ],
    ),

    );
  }

  // H√†m hi·ªÉn th·ªã ph·∫ßn b√¨nh lu·∫≠n
  void _showCommentsDialog(BuildContext context, int index) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Comments'),
          content: SingleChildScrollView(
            child: Column(
              children: [
                // Hi·ªÉn th·ªã danh s√°ch b√¨nh lu·∫≠n (·ªü ƒë√¢y t√¥i ch·ªâ hi·ªÉn th·ªã b√¨nh lu·∫≠n gi·∫£)
                for (int i = 0; i < _moments[index]['comments']; i++)
                  ListTile(
                    title: Text('User ${(i + 1)}: Great post!'),
                  ),
                // √î nh·∫≠p b√¨nh lu·∫≠n m·ªõi
                TextField(
                  decoration: InputDecoration(hintText: 'Add a comment...'),
                ),
              ],
            ),
          ),
          actions: [
            TextButton(
              onPressed: () => Navigator.pop(context), // ƒê√≥ng dialog
              child: Text('Close'),
            ),
          ],
        );
      },
    );
  }
}
